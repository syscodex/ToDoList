@model ToDoList.Models.ToDoItem
@{
    ViewBag.Title = "Create";

}



<style>
    :root {
        --primary-color: #6a11cb;
        --secondary-color: #2575fc;
        --background-light: #f9f9f9;
        --text-dark: #333;
        --border-light: #e0e0e0;
    }

    body {
        background-color: var(--background-light);
        font-family: 'Roboto', Arial, sans-serif;
        color: var(--text-dark);
        padding: 2rem;
    }

    .form-container {
        background: white;
        border-radius: 8px;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        padding: 1.5rem;
        max-width: 500px;
        margin: auto;
    }

    .form-title {
        color: var(--primary-color);
        font-weight: 600;
        margin-bottom: 1rem;
        text-align: center;
        font-size: 1.25rem;
    }

    .form-label {
        font-size: 0.9rem;
        margin-bottom: 0.5rem;
    }

    .form-control, .form-select {
        border: 1px solid var(--border-light);
        border-radius: 6px;
        padding: 0.5rem;
        font-size: 0.9rem;
        margin-bottom: 1rem;
        transition: border-color 0.2s;
    }

        .form-control:focus, .form-select:focus {
            border-color: var(--primary-color);
            outline: none;
        }

    .input-group-text {
        background-color: var(--primary-color);
        color: #fff;
        border: none;
        border-radius: 6px 0 0 6px;
    }

    .btn-primary {
        background-color: var(--primary-color);
        color: #fff;
        border: none;
        padding: 0.75rem 1.5rem;
        border-radius: 6px;
        transition: background-color 0.3s;
        width: 100%;
        margin-bottom: 1rem;
    }

        .btn-primary:hover {
            background-color: var(--secondary-color);
        }

    .btn-secondary {
        background-color: #e0e0e0;
        color: var(--text-dark);
        border: none;
        padding: 0.75rem 1.5rem;
        border-radius: 6px;
        width: 100%;
    }

        .btn-secondary:hover {
            background-color: #d6d6d6;
        }

    .text-danger {
        font-size: 0.8rem;
        margin-top: 0.25rem;
        color: #d32f2f;
    }

    .row {
        display: flex;
        gap: 1rem;
    }

    .col-md-6 {
        flex: 1;
    }
</style>

    <div class="container">
        <div class="form-container">
            <h1 class="form-title">
                <i class="fas fa-plus-circle"></i>
                Create To-Do Item
            </h1>
            <form asp-action="Create" method="post" novalidate>
                <div class="mb-3">
                    <label for="Title" class="form-label">Task Title</label>
                    <input asp-for="Title" id="Title" class="form-control" placeholder="Enter task title" />
                    <span asp-validation-for="Title" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label for="Details" class="form-label">Task Details</label>
                    <textarea asp-for="Details" id="Details" class="form-control" rows="3" placeholder="Provide additional details (optional)"></textarea>
                    <span asp-validation-for="Details" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label for="AssignedTo" class="form-label">Assigned To</label>
                    <input asp-for="AssignedTo" id="AssignedTo" class="form-control" placeholder="Name or email of the assignee" />
                    <span asp-validation-for="AssignedTo" class="text-danger"></span>
                </div>

                <div class="row">
                    <div class="col-md-6">
                        <label for="DateStarted" class="form-label">Start Date</label>
                        <input asp-for="DateStarted" id="DateStarted" type="datetime-local" class="form-control" />
                        <span asp-validation-for="DateStarted" class="text-danger"></span>
                    </div>

                    <div class="col-md-6">
                        <label for="DateOfCompletion" class="form-label">Completion Date</label>
                        <input asp-for="DateOfCompletion" id="DateOfCompletion" type="datetime-local" class="form-control" />
                        <span asp-validation-for="DateOfCompletion" class="text-danger"></span>
                    </div>
                </div>

                <div class="mb-3">
                    <label for="Status" class="form-label">Task Status</label>
                    <select asp-for="Status" id="Status" class="form-select">
                        <option value="" disabled selected>Select Status</option>
                        <option value="Pending">Pending</option>
                        <option value="InProgress">In Progress</option>
                        <option value="Completed">Completed</option>
                        <option value="OnHold">On Hold</option>
                    </select>
                    <span asp-validation-for="Status" class="text-danger"></span>
                </div>

                <button type="submit" class="btn btn-primary">
                    <i class="fas fa-save me-2"></i> Save Task
                </button>
                <a href="@Url.Action("Index", "ToDo")" class="btn btn-secondary">
                    <i class="fas fa-times-circle me-2"></i> Cancel
                </a>
            </form>
        </div>
    </div>

    <!-- Bootstrap JS and dependencies -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.5.0/dist/sweetalert2.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>

<script>
    $(document).ready(function() {
        // Reference the form
        var form = $('form');  // Or $('#createForm') 

        form.submit(function(e) {
            e.preventDefault(); // Prevent the form from submitting the usual way

            // Perform AJAX request
            $.ajax({
                url: '@Url.Action("Create", "ToDo")',
                method: 'POST',
                data: form.serialize(), // Serialize the form data
                success: function(response) {
                    if (response.success) {
                        // Show success notification with SweetAlert
                        Swal.fire({
                            icon: 'success',
                            title: 'Success',
                            text: response.message,
                            showConfirmButton: false,
                            timer: 1500 // Adjust the timer to control how long the toast shows
                        }).then(() => {
                            // Redirect to the Index page after the success notification
                            window.location.href = '@Url.Action("Index", "ToDo")'; // Ensure URL is correct
                        });
                    } else {
                        // Show error notification with SweetAlert
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: response.message,
                            showConfirmButton: true
                        });
                    }
                },
                error: function() {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'An error occurred while submitting the form. Please try again.',
                        showConfirmButton: true
                    });
                }
            });
        });
    });
</script>

